/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {

    ext {
        vertx_jooq_version = '4.1.0'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.1"
        classpath "io.github.jklingsporn:vertx-jooq-generate:$vertx_jooq_version"
        classpath 'org.postgresql:postgresql:42.2.5'
    }
}
plugins {
    id 'java'
}




apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.liquibase.gradle'
//apply plugin: 'nu.studer.jooq'

import groovy.xml.MarkupBuilder
import org.jooq.codegen.GenerationTool

import javax.xml.bind.JAXB

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude group: 'org.apache.tomcat'
}


ext {
    junitJupiterEngineVersion = '5.2.0'
    reactive_pg_client_version = '0.11.2'
}

repositories {
    mavenLocal()
    jcenter()
}

group = 'io.remicro'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'io.remicro.bericht.MainKt'

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
    }
}
//
//def mainVerticleName = 'io.remicro.bericht.saga.MainVerticle'
//def watchForChange = 'src/**/*'
//def doOnChange = './gradlew classes'


def changeLog = "$projectDir/src/main/db/changelog.xml"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-ignite:$vertx_version"
    compile "io.vertx:vertx-web:$vertx_version"
    compile "io.vertx:vertx-auth-jwt:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"
    
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"

    compile "io.reactiverse:reactive-pg-client:$reactive_pg_client_version"

    compile "org.springframework.boot:spring-boot-starter:$spring_boot_version"
    compile "org.springframework:spring-aop:5.0.1.RELEASE"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2"
    compile "io.github.jklingsporn:vertx-jooq-classic-reactive:$vertx_jooq_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "io.vertx:vertx-junit5:$vertx_version"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.mockito:mockito-core:$mockito_version"
    testCompile "org.mockito:mockito-junit-jupiter:2.18.3"
    testCompile "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")

    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic'
    liquibaseRuntime 'org.postgresql:postgresql:42.2.5'

    //jooqRuntime 'org.postgresql:postgresql:42.2.5'
}
//
//jooq {
//    version = '3.11.9'
//    edition = 'OSS'
//    sample(sourceSets.main) {
//        jdbc {
//            driver = 'org.postgresql.Driver'
//            url = 'jdbc:postgresql://localhost:5432/sage'
//            user = 'remicro'
//            password = 'secret'
//            properties {
//                property {
//                    key = 'ssl'
//                    value = 'false'
//                }
//            }
//        }
//        generator {
//            name = 'org.jooq.codegen.DefaultGenerator'
//            strategy {
//                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
//            }
//            database {
//                name = 'org.jooq.meta.postgres.PostgresDatabase'
//                inputSchema = 'public'
//                forcedTypes {
//                    forcedType {
//                        name = 'varchar'
//                        expression = '.*'
//                        types = 'JSONB?'
//                    }
//                    forcedType {
//                        name = 'varchar'
//                        expression = '.*'
//                        types = 'INET'
//                    }
//                }
//            }
//            generate {
//                relations = true
//                deprecated = false
//                records = true
//                immutablePojos = true
//                fluentSetters = true
//            }
//            target {
//                packageName = 'io.remicro.saga.models'
//                // directory = ...
//            }
//        }
//    }
//}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/*
shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
*/

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

liquibase {
    activities {
        main {
            changeLogFile changeLog
            url 'jdbc:postgresql://localhost/sage'
            username 'remicro'
            password ''
        }
    }
}

task jooqGenerate {
    doLast() {
        def writer = new StringWriter()
        new MarkupBuilder(writer)
                .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd') {
            jdbc {
                driver('org.postgresql.Driver')
                url('jdbc:postgresql://localhost/sage')
                user('remicro')
                password('secret')
            }
            generator {
                name('io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator')
                database {
                    name('org.jooq.meta.postgres.PostgresDatabase')
                    include('.*')
                    excludes('schema_version')
                    inputSchema('public')
                    includeTables(true)
                    includeRoutines(true)
                    includePackages(false)
                    includeUDTs(true)
                    includeSequences(true)
                }
                generate([:]) {
                    deprecated(false)
                    records(false)
                    interfaces(true)
                    fluentSetters(true)
                    pojos(true)
                    daos(true)
                }
                target() {
                    packageName('io.remicro.saga.entities')
                    directory("$projectDir/src/main/java")
                }
                strategy {
                    name('io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy')
                }
            }
        }
        GenerationTool.generate(
                JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.meta.jaxb.Configuration.class)
        )
    }
}
